{"ast":null,"code":"var _jsxFileName = \"C:\\\\episode1\\\\src\\\\PredictAgeApi\\\\PredictAgeApi.jsx\";\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PredictAgeApi() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Predict Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = PredictAgeApi;\nexport default PredictAgeApi;\nvar _c;\n$RefreshReg$(_c, \"PredictAgeApi\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PredictAgeApi","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/episode1/src/PredictAgeApi/PredictAgeApi.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState} from 'react';\r\nfunction PredictAgeApi () {\r\n    return (\r\n        <>\r\n            <input></input>\r\n            <button>Predict Age</button>\r\n            <p></p>\r\n        </>\r\n    );\r\n\r\n}\r\nexport default PredictAgeApi;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC3C,SAASC,aAAaA,CAAA,EAAI;EACtB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACfR,OAAA;MAAAI,QAAA,EAAQ;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5BR,OAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACT,CAAC;AAGX;AAACC,EAAA,GATQN,aAAa;AAUtB,eAAeA,aAAa;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}