{"ast":null,"code":"var _jsxFileName = \"C:\\\\episode1\\\\src\\\\App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const planets = [{\n    name: \"Mars\",\n    isGasPlanet: false\n  }, {\n    name: \"Earth\",\n    isGasPlanet: false\n  }, {\n    name: \"Jupiter\",\n    isGasPlanet: true\n  }, {\n    name: \"Venus\",\n    isGasPlanet: false\n  }, {\n    name: \"Neptune\",\n    isGasPlanet: true\n  }, {\n    name: \"Uranus\",\n    isGasPlanet: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [planets.map((planet, key)), planets.isGasPlanet && /*#__PURE__*/_jsxDEV(\"planet\", {\n      name: planets.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst planet = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","planets","name","isGasPlanet","className","children","map","planet","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","props","$RefreshReg$"],"sources":["C:/episode1/src/App.js"],"sourcesContent":["import './App.css';\n\nfunction App() {\n  const planets = [\n    {name: \"Mars\", isGasPlanet: false},\n    {name: \"Earth\", isGasPlanet: false},\n    {name: \"Jupiter\", isGasPlanet: true},\n    {name: \"Venus\", isGasPlanet: false},\n    {name: \"Neptune\", isGasPlanet: true},\n    {name: \"Uranus\", isGasPlanet: true},\n  ];\n  return (\n    <div className=\"App\">\n      {planets.map((planet, key))}\n      {planets.isGasPlanet && <planet name={planets.name}  />}\n    </div>\n  );\n}\n\nconst planet = (props) => {\n  return (\n    <div>\n      <h1>{props.name}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,OAAO,GAAG,CACd;IAACC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAK,CAAC,EAClC;IAACD,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAK,CAAC,EACnC;IAACD,IAAI,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAI,CAAC,EACpC;IAACD,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAK,CAAC,EACnC;IAACD,IAAI,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAI,CAAC,EACpC;IAACD,IAAI,EAAE,QAAQ;IAAEC,WAAW,EAAE;EAAI,CAAC,CACpC;EACD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBJ,OAAO,CAACK,GAAG,EAAEC,MAAM,EAAEC,GAAG,CAAC,CAAC,EAC1BP,OAAO,CAACE,WAAW,iBAAIJ,OAAA;MAAQG,IAAI,EAAED,OAAO,CAACC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACC,EAAA,GAfQb,GAAG;AAiBZ,MAAMO,MAAM,GAAIO,KAAK,IAAK;EACxB,oBACEf,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAAM,QAAA,EAAKS,KAAK,CAACZ;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAED,eAAeZ,GAAG;AAAC,IAAAa,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}